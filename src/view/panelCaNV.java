//nghia

package view;

import dao.Dao_CaLam;
import dao.Dao_CaNhanVien;
import dao.Dao_NhanVien;
import dao.Dao_QuayCafe;
import java.awt.Font;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.CaBan;
import model.CaNhanVien;
import model.NhanVien;
import model.QuayCafe;

/**
 *
 * @author nghia
 */
public class panelCaNV extends javax.swing.JPanel {

    /**
     * Creates new form panelCaNV
     */
    private static DefaultTableModel dtm;
    private final List<CaBan> list;
    private static List<String> listMaNV;//dùng để chứa danh sách mã nhân viên
    private final CaNhanVien cnv;
    public static boolean formThemCaLamOpened = false;
    public static boolean formThemQuayOpened = false;

    public panelCaNV() {
        initComponents();
        tableCaLamViec.getTableHeader().setFont(new Font(Font.SANS_SERIF, Font.PLAIN, 15));
        tablePhanCa.getTableHeader().setFont(new Font(Font.SANS_SERIF, Font.PLAIN, 15));
        tablePhanCa.getTableHeader().setAlignmentX(CENTER_ALIGNMENT);
        list = Dao_CaLam.layDS();
        layDSCa(list);
        loadComboBoxMaCa(list);
        loadComboBoxNhanVien(Dao_NhanVien.layDanhSach());
        loadComboBoxQuay(Dao_QuayCafe.layDSQuay());
        cnv = new CaNhanVien();
    }

    public static final void layDSCa(List<CaBan> list) {
        dtm = (DefaultTableModel) tableCaLamViec.getModel();
        dtm.setRowCount(0);
        int i = 1;
        for (CaBan ca : list) {
            dtm.addRow(new Object[]{
                i++,
                ca.getMaCa(),
                ca.getGioBD(),
                ca.getGioKT()
            });
        }
    }

    public static void loadComboBoxQuay(List<QuayCafe> list) {
        cbbQuay.removeAllItems();
        cbbMaQuay.removeAllItems();
        
        list.forEach((QuayCafe q) -> {
            cbbQuay.addItem("Quầy " + q.getMa());
            cbbMaQuay.addItem(q.getMa() + "");
        });
        cbbMaQuay.setSelectedIndex(-1);
    }

    public static void loadComboBoxNhanVien(List<NhanVien> list) {
        cbbNhanVien.removeAllItems();
        listMaNV = new ArrayList<>();
        list.forEach((NhanVien nv) -> {
            cbbNhanVien.addItem(nv.getHo() + " " + nv.getTen() + " (" + nv.getMaNV() + ")");
            listMaNV.add(nv.getMaNV() + "");
        });
        cbbNhanVien.setSelectedIndex(-1);
    }

    public static void loadComboBoxMaCa(List<CaBan> list) {
        cbbMaCa.removeAllItems();
        list.forEach((CaBan ca) -> {
            cbbMaCa.addItem(ca.getMaCa());
        });
        cbbMaCa.setSelectedIndex(-1);
    }

    private int isNhanVienValid() {
        if (cbbNhanVien.getSelectedIndex() == -1) {
            return 0;
        } else {
            return 1;
        }
    }

    private int isMaCaValid() {
        if (cbbMaCa.getSelectedIndex() == -1) {
            return 0;
        } else {
            return 1;
        }
    }

    private int isMaQuayValid() {
        if (cbbMaQuay.getSelectedIndex() == -1) {
            return 0;
        } else {
            return 1;
        }
    }

    private boolean isAllValid() {
        if (isNhanVienValid() == 1 && isMaCaValid() == 1 && isMaQuayValid() == 1) {
            return true;
        } else if (isNhanVienValid() == 0) {
            JOptionPane.showMessageDialog(this, "Chưa chọn nhân viên!");
            cbbNhanVien.requestFocus();
            return false;
        } else if (isMaCaValid() == 0) {
            JOptionPane.showMessageDialog(this, "Chưa chọn ca!");
            cbbMaCa.requestFocus();
            return false;
        } else if (isMaQuayValid() == 0) {
            JOptionPane.showMessageDialog(this, "Chưa chọn mã quầy!");
            cbbMaQuay.requestFocus();
            return false;
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel20 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jPanel65 = new javax.swing.JPanel();
        buttonThemPhanCa = new javax.swing.JButton();
        buttonSuaPhanCa = new javax.swing.JButton();
        buttonXoaPhanCa = new javax.swing.JButton();
        jPanel66 = new javax.swing.JPanel();
        jLabel51 = new javax.swing.JLabel();
        cbbNhanVien = new javax.swing.JComboBox<>();
        jLabel52 = new javax.swing.JLabel();
        cbbMaCa = new javax.swing.JComboBox<>();
        jLabel53 = new javax.swing.JLabel();
        cbbThu = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        cbbMaQuay = new javax.swing.JComboBox<>();
        jPanel23 = new javax.swing.JPanel();
        jPanel63 = new javax.swing.JPanel();
        buttonThemCa = new javax.swing.JButton();
        buttonSuaCa = new javax.swing.JButton();
        buttonXoaCa = new javax.swing.JButton();
        jPanel64 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tableCaLamViec = new javax.swing.JTable();
        jPanel21 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablePhanCa = new javax.swing.JTable();
        cbbQuay = new javax.swing.JComboBox<>();
        buttonQuay = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        labelDiaDiem = new javax.swing.JLabel();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        jPanel20.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel20.setPreferredSize(new java.awt.Dimension(740, 200));
        jPanel20.setLayout(new javax.swing.BoxLayout(jPanel20, javax.swing.BoxLayout.X_AXIS));

        jPanel22.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Xếp Ca Làm", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        jPanel22.setLayout(new java.awt.BorderLayout());

        jPanel65.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel65.setPreferredSize(new java.awt.Dimension(303, 80));
        jPanel65.setLayout(new java.awt.GridBagLayout());

        buttonThemPhanCa.setForeground(new java.awt.Color(0, 102, 204));
        buttonThemPhanCa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/floppy-disk-16.png"))); // NOI18N
        buttonThemPhanCa.setText("Thêm");
        buttonThemPhanCa.setMinimumSize(new java.awt.Dimension(100, 25));
        buttonThemPhanCa.setPreferredSize(new java.awt.Dimension(111, 34));
        buttonThemPhanCa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonThemPhanCaMouseClicked(evt);
            }
        });
        jPanel65.add(buttonThemPhanCa, new java.awt.GridBagConstraints());

        buttonSuaPhanCa.setForeground(new java.awt.Color(0, 102, 204));
        buttonSuaPhanCa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/edit-info-16.png"))); // NOI18N
        buttonSuaPhanCa.setText("Chỉnh Sửa");
        buttonSuaPhanCa.setPreferredSize(new java.awt.Dimension(111, 34));
        buttonSuaPhanCa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonSuaPhanCaMouseClicked(evt);
            }
        });
        jPanel65.add(buttonSuaPhanCa, new java.awt.GridBagConstraints());

        buttonXoaPhanCa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delete-16.png"))); // NOI18N
        buttonXoaPhanCa.setText("Xóa");
        buttonXoaPhanCa.setMinimumSize(new java.awt.Dimension(100, 25));
        buttonXoaPhanCa.setPreferredSize(new java.awt.Dimension(111, 34));
        buttonXoaPhanCa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonXoaPhanCaMouseClicked(evt);
            }
        });
        jPanel65.add(buttonXoaPhanCa, new java.awt.GridBagConstraints());

        jPanel22.add(jPanel65, java.awt.BorderLayout.PAGE_END);

        jPanel66.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel66.setLayout(new java.awt.GridBagLayout());

        jLabel51.setForeground(new java.awt.Color(0, 102, 204));
        jLabel51.setText("Nhân Viên");
        jLabel51.setPreferredSize(new java.awt.Dimension(70, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel66.add(jLabel51, gridBagConstraints);

        cbbNhanVien.setMaximumRowCount(15);
        cbbNhanVien.setPreferredSize(new java.awt.Dimension(140, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 1.0;
        jPanel66.add(cbbNhanVien, gridBagConstraints);

        jLabel52.setForeground(new java.awt.Color(0, 102, 204));
        jLabel52.setText("Mã Ca");
        jLabel52.setPreferredSize(new java.awt.Dimension(70, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel66.add(jLabel52, gridBagConstraints);

        cbbMaCa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        cbbMaCa.setPreferredSize(new java.awt.Dimension(70, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 1.0;
        jPanel66.add(cbbMaCa, gridBagConstraints);

        jLabel53.setForeground(new java.awt.Color(0, 102, 204));
        jLabel53.setText("Ngày (Thứ)");
        jLabel53.setPreferredSize(new java.awt.Dimension(70, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel66.add(jLabel53, gridBagConstraints);

        cbbThu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "02", "03", "04", "05", "06", "07", "CN" }));
        cbbThu.setPreferredSize(new java.awt.Dimension(50, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 17;
        gridBagConstraints.weighty = 1.0;
        jPanel66.add(cbbThu, gridBagConstraints);

        jLabel1.setForeground(new java.awt.Color(0, 102, 204));
        jLabel1.setText("Mã Quầy");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel66.add(jLabel1, gridBagConstraints);

        cbbMaQuay.setPreferredSize(new java.awt.Dimension(70, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 1.0;
        jPanel66.add(cbbMaQuay, gridBagConstraints);

        jPanel22.add(jPanel66, java.awt.BorderLayout.CENTER);

        jPanel20.add(jPanel22);

        jPanel23.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ca Làm Việc", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        jPanel23.setPreferredSize(new java.awt.Dimension(405, 194));
        jPanel23.setLayout(new java.awt.BorderLayout());

        jPanel63.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel63.setPreferredSize(new java.awt.Dimension(415, 70));
        jPanel63.setLayout(new java.awt.GridBagLayout());

        buttonThemCa.setForeground(new java.awt.Color(0, 102, 204));
        buttonThemCa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/add-16.png"))); // NOI18N
        buttonThemCa.setText("Thêm Mới");
        buttonThemCa.setPreferredSize(new java.awt.Dimension(103, 34));
        buttonThemCa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonThemCaMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel63.add(buttonThemCa, gridBagConstraints);

        buttonSuaCa.setForeground(new java.awt.Color(0, 102, 204));
        buttonSuaCa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/edit-info-16.png"))); // NOI18N
        buttonSuaCa.setText("Chỉnh Sửa");
        buttonSuaCa.setPreferredSize(new java.awt.Dimension(105, 34));
        buttonSuaCa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonSuaCaMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel63.add(buttonSuaCa, gridBagConstraints);

        buttonXoaCa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delete-16.png"))); // NOI18N
        buttonXoaCa.setText("Xóa");
        buttonXoaCa.setPreferredSize(new java.awt.Dimension(115, 34));
        buttonXoaCa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonXoaCaMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        jPanel63.add(buttonXoaCa, gridBagConstraints);

        jPanel23.add(jPanel63, java.awt.BorderLayout.PAGE_START);

        tableCaLamViec.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "STT", "Mã Ca", "Giờ Bắt Đầu", "Giờ Kết Thúc"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableCaLamViec.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableCaLamViec.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tableCaLamViecKeyPressed(evt);
            }
        });
        jScrollPane6.setViewportView(tableCaLamViec);

        javax.swing.GroupLayout jPanel64Layout = new javax.swing.GroupLayout(jPanel64);
        jPanel64.setLayout(jPanel64Layout);
        jPanel64Layout.setHorizontalGroup(
            jPanel64Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
        );
        jPanel64Layout.setVerticalGroup(
            jPanel64Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
        );

        jPanel23.add(jPanel64, java.awt.BorderLayout.CENTER);

        jPanel20.add(jPanel23);

        add(jPanel20);

        jPanel21.setPreferredSize(new java.awt.Dimension(810, 214));

        tablePhanCa.setAutoCreateRowSorter(true);
        tablePhanCa.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        tablePhanCa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Thứ", "Mã Ca", "Mã Nhân Viên", "Họ Tên Nhân Viên"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablePhanCa.setRowHeight(18);
        tablePhanCa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablePhanCaMouseClicked(evt);
            }
        });
        tablePhanCa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablePhanCaKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(tablePhanCa);
        if (tablePhanCa.getColumnModel().getColumnCount() > 0) {
            tablePhanCa.getColumnModel().getColumn(0).setMinWidth(100);
            tablePhanCa.getColumnModel().getColumn(0).setPreferredWidth(100);
            tablePhanCa.getColumnModel().getColumn(0).setMaxWidth(200);
            tablePhanCa.getColumnModel().getColumn(3).setMinWidth(400);
            tablePhanCa.getColumnModel().getColumn(3).setPreferredWidth(400);
        }

        cbbQuay.setForeground(new java.awt.Color(0, 102, 204));
        cbbQuay.setToolTipText("Chọn quầy để xem phân ca làm");
        cbbQuay.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbQuayItemStateChanged(evt);
            }
        });

        buttonQuay.setForeground(new java.awt.Color(0, 102, 204));
        buttonQuay.setText("Quầy Cafe");
        buttonQuay.setToolTipText("Thêm Xóa Sửa Quầy");
        buttonQuay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonQuayMouseClicked(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 255));
        jLabel11.setText("Địa Điểm: ");
        jLabel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        labelDiaDiem.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelDiaDiem.setText("Quận Tân Phú");
        labelDiaDiem.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 955, Short.MAX_VALUE)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addComponent(cbbQuay, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonQuay))
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelDiaDiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonQuay)
                    .addComponent(cbbQuay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(labelDiaDiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        add(jPanel21);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonThemCaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonThemCaMouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == MouseEvent.BUTTON1) {
            formThemCaLam f;
            if (!formThemCaLamOpened) {
                f = new formThemCaLam();
                f.setVisible(true);
                formThemCaLamOpened = true;
            } else {
                JOptionPane.showMessageDialog(this, "Cửa sổ thêm ca làm đã được mở!");
            }
        }
    }//GEN-LAST:event_buttonThemCaMouseClicked

    private void buttonSuaCaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSuaCaMouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == MouseEvent.BUTTON1) {
            int i = tableCaLamViec.getSelectedRow();
            if (i != -1) {
                String ca = (String) tableCaLamViec.getValueAt(i, 1);
                String gioBD = (String) tableCaLamViec.getValueAt(i, 2);
                String gioKT = (String) tableCaLamViec.getValueAt(i, 3);
                formThemCaLam f = new formThemCaLam(ca, gioBD, gioKT, false);
                f.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Chưa Có Dòng Nào Được Chọn");
            }
        }
    }//GEN-LAST:event_buttonSuaCaMouseClicked

    private void buttonQuayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonQuayMouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == MouseEvent.BUTTON1) {
            if (!formThemCaLamOpened) {
                formThemQuay f = new formThemQuay();
                f.setVisible(true);
                
                formThemQuayOpened = true; //đã mở
            } else {
                JOptionPane.showMessageDialog(this, "Cửa sổ thêm quầy đã được mở!");
            }
        }
    }//GEN-LAST:event_buttonQuayMouseClicked

    private void buttonXoaCaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonXoaCaMouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == MouseEvent.BUTTON1) {
            int index = tableCaLamViec.getSelectedRow();
//            System.out.println("Lỗi ở đây 0");
            if (index != -1) {
                String ca;
                ca = (String) tableCaLamViec.getValueAt(index, 1);
//                System.out.println("Lỗi ở đây 1");
                int i = JOptionPane.showConfirmDialog(this, "Bạn Có Muốn Xóa Không",
                        "Xóa Nhân Viên", JOptionPane.YES_NO_OPTION);
                if (i == JOptionPane.YES_OPTION) {
//                    System.out.println("Lỗi ở đây 2");
                    if (Dao_CaLam.caDaPhan(ca)) {
                        JOptionPane.showMessageDialog(this,
                                "Ca Này Đã Được Phân Công", "Không Thể Xóa", JOptionPane.WARNING_MESSAGE);
                    } else {
                        if (Dao_CaLam.xoaCa(ca) != 0) {
//                        JOptionPane.showMessageDialog(this, "Xóa Thành Công");
                            layDSCa(Dao_CaLam.layDS());
                            loadComboBoxMaCa(Dao_CaLam.layDS());
                        } else {
                            JOptionPane.showMessageDialog(this, "Xảy Ra Lỗi Khi Xóa");
                        }
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Chưa Có Dòng Nào Được Chọn");
            }
        }
    }//GEN-LAST:event_buttonXoaCaMouseClicked

    private void tableCaLamViecKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableCaLamViecKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            tableCaLamViec.clearSelection();
        }
    }//GEN-LAST:event_tableCaLamViecKeyPressed

    private void buttonThemPhanCaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonThemPhanCaMouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == MouseEvent.BUTTON1) {
            if (isAllValid()) {
                String manvString = (String) cbbNhanVien.getSelectedItem();
                String manv = "000";
                for (String st : listMaNV) {
                    if (manvString.contains(st)) {
                        manv = st;
                        break;
                    }
                }
                String maca = (String) cbbMaCa.getSelectedItem();
                String thu = (String) cbbThu.getSelectedItem();
                String maQuay = (String) cbbMaQuay.getSelectedItem();
                if (!Dao_CaNhanVien.daTonTai(Integer.parseInt(manv), maca, thu)) {
                    if (Dao_CaNhanVien.themCaNhanVien(Integer.parseInt(manv), maca, thu, Integer.parseInt(maQuay)) != 0) {
                        JOptionPane.showMessageDialog(this, "Thêm Thành Công!");
                        boChonComboBox();
                        cbbQuayItemStateChange(cbbQuay.getSelectedItem().toString());
                    } else {
                        boChonComboBox();
                        JOptionPane.showMessageDialog(this, "Thêm Thất Bại!");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Ca này đã được phân cho nhân viên này!");
                }
            }
        }
    }//GEN-LAST:event_buttonThemPhanCaMouseClicked

    //lấy danh sách ca nv dựa trên mã quầy trong combobox
    private void layDSCaNV(int maQuay) {
        dtm = (DefaultTableModel) tablePhanCa.getModel();
        dtm.setRowCount(0);
        List<CaNhanVien> l = Dao_CaNhanVien.layDSCaNV(maQuay);
        NhanVien nv;
        for (CaNhanVien canv : l) {
            nv = Dao_NhanVien.layNhanVien(canv.getMaNV());
            dtm.addRow(new Object[]{
                canv.getNgay(),
                canv.getMaCa(),
                canv.getMaNV(),
                nv.getHo() + " " + nv.getTen()
            });
        }
    }

    //lấy các cột ma_nv, ma_ca, ngay
    private void layUniqueKey(int row) {
        int maNV = (int) tablePhanCa.getValueAt(row, 2);
        String thu = (String) tablePhanCa.getValueAt(row, 0);
        String maCa = (String) tablePhanCa.getValueAt(row, 1);
        cnv.setMaCa(maCa);
        cnv.setMaNV(maNV);
        cnv.setNgay(thu);
    }

    //lấy dữ liệu từ combobox
    private void layTuComboBox() {
        String maca = (String) cbbMaCa.getSelectedItem();
        String thu = (String) cbbThu.getSelectedItem();
        int maQuay = Integer.parseInt(cbbMaQuay.getSelectedItem().toString());
        cnv.setMaCa(maca);
        cnv.setNgay(thu);
        cnv.setMaQuay(maQuay);
    }

    //đổi quầy thì cập nhật lại table phân ca
    private void cbbQuayItemStateChange(String item) {
//        System.out.println(item);
        String[] l = item.split(" ");
        String maQuay = l[1];
//        System.out.println(maQuay);
        layDSCaNV(Integer.parseInt(maQuay));
        QuayCafe q;
        q = Dao_QuayCafe.layQuay(Integer.parseInt(maQuay));
        labelDiaDiem.setText("Đường " + q.getDuong() + ", Khu Phố " + q.getKp()
                + ", Phường " + q.getPhuong() + ", Quận" + q.getQuan() + ", Tỉnh (Thành Phố) " + q.getTp());
//            for (String string : l) {
//                System.out.println(string);
//            }
    }

    private void cbbQuayItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbQuayItemStateChanged
        // TODO add your handling code here:
//        System.out.println("item state change");
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            String item = evt.getItem().toString();
            cbbQuayItemStateChange(item);
        }
    }//GEN-LAST:event_cbbQuayItemStateChanged

    private void buttonXoaPhanCaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonXoaPhanCaMouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == MouseEvent.BUTTON1) {
            int row = tablePhanCa.getSelectedRow();
            if (row != -1) {
                int option = JOptionPane.showConfirmDialog(this, "Bạn Có Muốn Xóa Không?", "Xóa Ca Làm Nhân Viên", JOptionPane.YES_NO_OPTION);
                if (option == JOptionPane.YES_OPTION) {
                    layUniqueKey(row);
                    if (Dao_CaNhanVien.xoaCaNhanVien(cnv.getNgay(), cnv.getMaCa(), cnv.getMaNV()) != 0) {
                        cbbQuayItemStateChange(cbbQuay.getSelectedItem().toString());
                        JOptionPane.showMessageDialog(this, "Xóa Thành Công!");
                        boChonComboBox();
                    } else {
                        JOptionPane.showMessageDialog(this, "Không Thể Xóa Được!");
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Chưa Có Dòng Nào Được Chọn");
            }
        }
    }//GEN-LAST:event_buttonXoaPhanCaMouseClicked

    private void tablePhanCaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablePhanCaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            tablePhanCa.clearSelection();
            boChonComboBox();
        }
    }//GEN-LAST:event_tablePhanCaKeyPressed

    public void layTuBangPhanCa(int row) {
        String nv = tablePhanCa.getValueAt(row, 3) + " (" + tablePhanCa.getValueAt(row, 2) + ")";
        String[] l = cbbQuay.getSelectedItem().toString().split(" ");
        String maQuay = l[1];
        String maCa = (String) tablePhanCa.getValueAt(row, 1);
        String thu = (String) tablePhanCa.getValueAt(row, 0);

        cbbNhanVien.setSelectedItem(nv);
        cbbMaCa.setSelectedItem(maCa);
        cbbMaQuay.setSelectedItem(maQuay);
        cbbThu.setSelectedItem(thu);
        layUniqueKey(row);
    }

    //bỏ chọn combobox
    private void boChonComboBox() {
        cbbMaCa.setSelectedIndex(-1);
        cbbMaQuay.setSelectedIndex(-1);
        cbbNhanVien.setSelectedIndex(-1);
        cbbThu.setSelectedIndex(0);
    }

    private void tablePhanCaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablePhanCaMouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == MouseEvent.BUTTON1) {
            int row = tablePhanCa.getSelectedRow();
            if (row != -1) {
                layTuBangPhanCa(row);
                cnv.setId(Dao_CaNhanVien.layID(cnv.getNgay(), cnv.getMaCa(), cnv.getMaNV()));
            }
        }
    }//GEN-LAST:event_tablePhanCaMouseClicked

    private void buttonSuaPhanCaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSuaPhanCaMouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == MouseEvent.BUTTON1) {
            int row = tablePhanCa.getSelectedRow();
            if (row != -1) {
                layTuComboBox();
                if (Dao_CaNhanVien.capNhatCaNV(cnv.getId(), cnv.getNgay(), cnv.getMaCa(), cnv.getMaNV()) != 0) {
                    cbbQuayItemStateChange(cbbQuay.getSelectedItem().toString());
                    JOptionPane.showMessageDialog(this, "Cập Nhật Thành Công!");
                    boChonComboBox();
                } else {
                    JOptionPane.showMessageDialog(this, "Không Thể Cập Nhật Được!");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Chưa Có Dòng Nào Được Chọn");
            }
        }
    }//GEN-LAST:event_buttonSuaPhanCaMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonQuay;
    private javax.swing.JButton buttonSuaCa;
    private javax.swing.JButton buttonSuaPhanCa;
    private javax.swing.JButton buttonThemCa;
    private javax.swing.JButton buttonThemPhanCa;
    private javax.swing.JButton buttonXoaCa;
    private javax.swing.JButton buttonXoaPhanCa;
    private static javax.swing.JComboBox<String> cbbMaCa;
    private static javax.swing.JComboBox<String> cbbMaQuay;
    private static javax.swing.JComboBox<String> cbbNhanVien;
    private static javax.swing.JComboBox<String> cbbQuay;
    private javax.swing.JComboBox<String> cbbThu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel63;
    private javax.swing.JPanel jPanel64;
    private javax.swing.JPanel jPanel65;
    private javax.swing.JPanel jPanel66;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel labelDiaDiem;
    private static javax.swing.JTable tableCaLamViec;
    private javax.swing.JTable tablePhanCa;
    // End of variables declaration//GEN-END:variables
}
