// nghia
package view;

import valid.MaxLength;
import dao.Dao_CaLam;
import java.awt.event.MouseEvent;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import valid.Regex;
import valid.Valid;
import static view.panelCaNV.loadComboBoxMaCa;

/**
 *
 * @author nghia
 */
public class formThemCaLam extends javax.swing.JFrame {

    /**
     * Creates new form FormThemCaLam
     */
    private boolean them;

    public formThemCaLam() {
        initComponents();
        khoiTao("Thêm Ca Làm Nhân Viên");
        them = true;
        labelFormatTimeBD.setText("");
        labelFormatTimeKT.setText("");
        labelMaCa.setText("");
    }

    public formThemCaLam(String maCa, String gioBD, String gioKT, boolean them) {
        initComponents();
        khoiTao("Sửa Ca Làm Nhân Viên");
        textMaCa.setText(maCa);
//        System.out.println("mã ca khi sửa: " + maCa);
        textGioBD.setText(getTimeFromDB(gioBD));
        textGioKT.setText(getTimeFromDB(gioKT));
        if (them) {
            textMaCa.setEditable(true);
        } else {
            textMaCa.setEditable(false);
        }
        this.them = them;
        
        labelFormatTimeBD.setText("");
        labelFormatTimeKT.setText("");
        labelMaCa.setText("");
    }

    public boolean isThem() {
        return them;
    }

    public void setThem(boolean them) {
        this.them = them;
    }

    private void khoiTao(String title) {
        this.setLocationRelativeTo(null);
        this.setTitle(title);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        textMaCa.setDocument(new MaxLength(2));
    }
    
    private String getTimeFromDB(String time){
        String[] a = time.split(":");
        return a[0]+":"+a[1];
    }

    private boolean dateValid() {
        String[] gioBD = textGioBD.getText().trim().split(":");
        String[] gioKT = textGioKT.getText().trim().split(":");
        if (gioBD[0].compareTo(gioKT[0]) > 0) {
            return false;
        } else {
            if (gioBD[0].compareTo(gioKT[0]) == 0) {
                if (gioBD[1].compareTo(gioKT[1]) >= 0) {
                    return false;
                }
            }
        }
        return true;
    }

    private int isMaCaValid() {
        String ma = textMaCa.getText().trim();
        if (ma.equals("")) {
            labelMaCa.setText("Không được trống!");
            return 0;
        } else if (!Valid.isTextValid(ma, Regex.W)) {
            labelMaCa.setText("Chỉ nhận 0-9a-z_");
            return -1;
        } else {
            labelMaCa.setText("");
            return 1;
        }
    }

    private int isGioBDValid() {
        if (textGioBD.getText().trim().equals("")) {
            labelFormatTimeBD.setText("Không được trống");
            return 0;
        } else {
            labelFormatTimeBD.setText("");
            return 1; //không trống
        }
    }

    private int isGioKTValid() {
        if (textGioKT.getText().trim().equals("")) {
            labelFormatTimeKT.setText("Không được trống");
            return 0;
        } else {
            labelFormatTimeKT.setText("");
            return 1; //không trống
        }
    }

    private boolean isAllValid() {
        if (isMaCaValid() == 1 && isGioBDValid() == 1 && isGioKTValid() == 1) {
            return true;
        } else {
            return false;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        buttonLuu = new javax.swing.JButton();
        buttonReset = new javax.swing.JButton();
        buttonHuyBo = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        textMaCa = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        labelFormatTimeBD = new javax.swing.JLabel();
        labelFormatTimeKT = new javax.swing.JLabel();
        textGioBD = new javax.swing.JFormattedTextField();
        textGioKT = new javax.swing.JFormattedTextField();
        labelMaCa = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setMaximumSize(new java.awt.Dimension(2147483647, 100));
        jPanel1.setMinimumSize(new java.awt.Dimension(186, 100));
        jPanel1.setPreferredSize(new java.awt.Dimension(400, 50));
        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout();
        flowLayout1.setAlignOnBaseline(true);
        jPanel1.setLayout(flowLayout1);

        buttonLuu.setForeground(new java.awt.Color(0, 102, 204));
        buttonLuu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/floppy-disk-16.png"))); // NOI18N
        buttonLuu.setText("Lưu");
        buttonLuu.setPreferredSize(new java.awt.Dimension(100, 30));
        buttonLuu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonLuuMouseClicked(evt);
            }
        });
        jPanel1.add(buttonLuu);

        buttonReset.setForeground(new java.awt.Color(0, 102, 204));
        buttonReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/refresh-16.png"))); // NOI18N
        buttonReset.setText("Nhập Lại");
        buttonReset.setPreferredSize(new java.awt.Dimension(100, 30));
        buttonReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonResetMouseClicked(evt);
            }
        });
        jPanel1.add(buttonReset);

        buttonHuyBo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/cancel-16.png"))); // NOI18N
        buttonHuyBo.setText("Hủy Bỏ");
        buttonHuyBo.setPreferredSize(new java.awt.Dimension(100, 30));
        buttonHuyBo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonHuyBoMouseClicked(evt);
            }
        });
        jPanel1.add(buttonHuyBo);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        jPanel2.setPreferredSize(new java.awt.Dimension(350, 200));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel1.setForeground(new java.awt.Color(0, 102, 204));
        jLabel1.setText("Mã Ca");
        jLabel1.setPreferredSize(new java.awt.Dimension(80, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel2.add(jLabel1, gridBagConstraints);

        textMaCa.setPreferredSize(new java.awt.Dimension(50, 25));
        textMaCa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textMaCaKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 118;
        gridBagConstraints.ipady = 5;
        jPanel2.add(textMaCa, gridBagConstraints);

        jLabel2.setForeground(new java.awt.Color(0, 102, 204));
        jLabel2.setText("Giờ Bắt Đầu");
        jLabel2.setPreferredSize(new java.awt.Dimension(80, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel2.add(jLabel2, gridBagConstraints);

        jLabel3.setForeground(new java.awt.Color(0, 102, 204));
        jLabel3.setText("Giờ Kết Thúc");
        jLabel3.setPreferredSize(new java.awt.Dimension(80, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        jPanel2.add(jLabel3, gridBagConstraints);

        labelFormatTimeBD.setForeground(new java.awt.Color(255, 0, 51));
        labelFormatTimeBD.setText("HH:mm");
        labelFormatTimeBD.setPreferredSize(new java.awt.Dimension(50, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(labelFormatTimeBD, gridBagConstraints);

        labelFormatTimeKT.setForeground(new java.awt.Color(255, 0, 51));
        labelFormatTimeKT.setText("HH:mm");
        labelFormatTimeKT.setPreferredSize(new java.awt.Dimension(50, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(labelFormatTimeKT, gridBagConstraints);

        textGioBD.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("HH:mm a"))));
        textGioBD.setPreferredSize(new java.awt.Dimension(50, 25));
        textGioBD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textGioBDKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 118;
        gridBagConstraints.ipady = 5;
        jPanel2.add(textGioBD, gridBagConstraints);

        textGioKT.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));
        textGioKT.setPreferredSize(new java.awt.Dimension(50, 25));
        textGioKT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textGioKTKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 118;
        gridBagConstraints.ipady = 5;
        jPanel2.add(textGioKT, gridBagConstraints);

        labelMaCa.setForeground(new java.awt.Color(255, 51, 0));
        labelMaCa.setText("Mã Này Đã TồnTại");
        labelMaCa.setPreferredSize(new java.awt.Dimension(50, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(labelMaCa, gridBagConstraints);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public boolean isEmptyField(JTextField t1, JFormattedTextField f1, JFormattedTextField f2) {
        return (t1.getText().trim().isEmpty() || f1.getText().trim().isEmpty() || f2.getText().trim().isEmpty());
    }

    private void buttonHuyBoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonHuyBoMouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == MouseEvent.BUTTON1) {
            panelCaNV.formThemCaLamOpened = false;
            this.dispose();
        }
    }//GEN-LAST:event_buttonHuyBoMouseClicked

    private void buttonLuuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonLuuMouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == MouseEvent.BUTTON1) {
            if (isAllValid() == false) {
                JOptionPane.showMessageDialog(this, "Phải Điền Đầy Đủ Các Trường Dữ Liệu");
            } else {
                if (them) {
                    if (Dao_CaLam.daTonTai(textMaCa.getText().trim().toUpperCase())) {
                        JOptionPane.showMessageDialog(this, "Mã này đã tồn tại");
                    } else {
                        if (Dao_CaLam.themCaLam(textMaCa.getText().trim().toUpperCase(),
                                textGioBD.getText().trim(), textGioKT.getText().trim()) != 0) {
                            panelCaNV.layDSCa(Dao_CaLam.layDS());
                            JOptionPane.showMessageDialog(rootPane, "Thêm Thành Công!");
                            loadComboBoxMaCa(Dao_CaLam.layDS());
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "Thêm Thất Bại!");
                        }
                    }
                } else {
                    String ca = textMaCa.getText().trim().toUpperCase();
                    String gioBD = textGioBD.getText().trim();
                    String gioKT = textGioKT.getText().trim();
                    if (Dao_CaLam.suaCaBan(ca, gioBD, gioKT) != 0) {
                        JOptionPane.showMessageDialog(rootPane, "Cập Nhật Thành Công!");
                        loadComboBoxMaCa(Dao_CaLam.layDS());
                        panelCaNV.layDSCa(Dao_CaLam.layDS());
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Cập Nhật Thất Bại!");
                    }
                }
            }
        }
    }//GEN-LAST:event_buttonLuuMouseClicked

    private void buttonResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonResetMouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == MouseEvent.BUTTON1) {
            textGioBD.setText("");
            textGioKT.setText("");
            textMaCa.setText("");
        }
    }//GEN-LAST:event_buttonResetMouseClicked

    private void textGioBDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textGioBDKeyReleased
        // TODO add your handling code here:
        evt.toString();
        if (isGioBDValid() == 1) {
            if (textGioBD.isEditValid()) {
                labelFormatTimeBD.setText("");
                buttonLuu.setEnabled(true);
            } else {
                buttonLuu.setEnabled(false);
                labelFormatTimeBD.setText("HH:mm");
            }
        }
    }//GEN-LAST:event_textGioBDKeyReleased

    private void textGioKTKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textGioKTKeyReleased
        // TODO add your handling code here:
        evt.toString();
        if (isGioKTValid() == 1) {
            if (textGioKT.isEditValid()) {
                buttonLuu.setEnabled(true);
                labelFormatTimeKT.setText("");
                if (dateValid()) {
                    labelFormatTimeKT.setText("");
                    buttonLuu.setEnabled(true);
                } else {
                    labelFormatTimeKT.setText("Giờ kết thúc phải lớn hơn!");
                    buttonLuu.setEnabled(false);
                }
            } else {
                buttonLuu.setEnabled(false);
                labelFormatTimeKT.setText("HH:mm");
            }
        }
    }//GEN-LAST:event_textGioKTKeyReleased

    private void textMaCaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textMaCaKeyReleased
        // TODO add your handling code here:
        evt.toString();
        if (isMaCaValid() == 1) {
            if (them) {
                if (Dao_CaLam.daTonTai(textMaCa.getText().trim().toUpperCase())) {
                    labelMaCa.setText("Mã này đã tồn tại!");
                    buttonLuu.setEnabled(false);
                } else {
                    labelMaCa.setText("");
                    buttonLuu.setEnabled(true);
                }
            }
        }
    }//GEN-LAST:event_textMaCaKeyReleased

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        evt.toString();
        panelCaNV.formThemCaLamOpened = false;
    }//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonHuyBo;
    private javax.swing.JButton buttonLuu;
    private javax.swing.JButton buttonReset;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel labelFormatTimeBD;
    private javax.swing.JLabel labelFormatTimeKT;
    private javax.swing.JLabel labelMaCa;
    private javax.swing.JFormattedTextField textGioBD;
    private javax.swing.JFormattedTextField textGioKT;
    private javax.swing.JTextField textMaCa;
    // End of variables declaration//GEN-END:variables
}
